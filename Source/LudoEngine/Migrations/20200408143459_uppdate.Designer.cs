// <auto-generated />
using System;
using LudoEngine;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LudoEngine.Migrations
{
    [DbContext(typeof(LudoGameContext))]
    [Migration("20200408143459_uppdate")]
    partial class uppdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LudoEngine.GameState", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("HasFinished")
                        .HasColumnType("bit");

                    b.Property<int>("NextPlayerID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("NextPlayerID")
                        .IsUnique();

                    b.ToTable("GameState");
                });

            modelBuilder.Entity("LudoEngine.Piece", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<bool>("HasFinished")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("PlayerID")
                        .HasColumnType("int");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int>("Steps")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PlayerID");

                    b.ToTable("Piece");
                });

            modelBuilder.Entity("LudoEngine.Player", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("HasFinished")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("LudoEngine.GameState", b =>
                {
                    b.HasOne("LudoEngine.Player", "NextPlayer")
                        .WithOne("GameStateID")
                        .HasForeignKey("LudoEngine.GameState", "NextPlayerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LudoEngine.Piece", b =>
                {
                    b.HasOne("LudoEngine.Player", null)
                        .WithMany("Pieces")
                        .HasForeignKey("PlayerID");
                });
#pragma warning restore 612, 618
        }
    }
}
